<script>
  import CodeGroup from "$lib/ui/CodeGroup.svelte";
  import Prism from "$lib/ui/Prism.svelte";
  import locale_param_matcher_snippet from "./locale-param-matcher-snippet.js?raw";
</script>

# $t18s Module Reference

The `$t18s` module contains all runtime code for t18s. It is how you interact
with the library.

## `type Locale`
A union type of all the locales you have registered with t18s.

<CodeGroup let:Tab>
  <Tab>
    <Prism language="typescript" code={'type Locale = "en" | "de";'} />
  </Tab>
</CodeGroup>

## `locales`

An array of all the locales you have registered with t18s. Useful for places
where you need to iterate over all locales, such as Locale Switchers or SEO.

## `$locale` Store

A writable store containing the currently active locale.

<CodeGroup let:Tab>
  <Tab>
    <Prism language="typescript" code="const locale = Writable<Locale>;" />
  </Tab>
</CodeGroup>

## `isLocale`

A convenience function for checking if something is a valid locale or not.
Only the locales that are registered with t18s are considered valid.

<CodeGroup let:Tab>
  <Tab>
    <Prism
      language="typescript"
      code="const isLocale = (thing: any) => thing is Locale;"
    />
  </Tab>
</CodeGroup>

It is useful for quickly creating a param matcher for locales.

<CodeGroup let:Tab let:Header>
  <Header title="src/params/locale.js" />
  <Tab>
    <Prism language="javascript" code={locale_param_matcher_snippet} />
  </Tab>
</CodeGroup>

## `setLocale`

Sets the current locale. Useful for Locale Switchers.

## `const fallbackLocale`

The fallback locale you specified in your config, or null if you don't specify one. Will be definitely
typed based on your config.

<CodeGroup let:Tab>
  <Tab>
    <Prism language="typescript" code="const fallbackLocale: Locale | null; //will be one or the other based on your config" />
  </Tab>
</CodeGroup>
